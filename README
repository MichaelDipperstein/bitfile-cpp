DESCRIPTION:
-----------
This archive contains an ISO C++ class implementing bitwise reading and
writing for sequential files.  This class is intended to be easy to follow
and expand upon, though it may be used without an understanding of its
implementation.

More information on the bitfile library may be found at:
https://michaeldipperstein.github.io/bitfile.html

FILES
-----
bitfile.cpp     - Class implementing bitwise reading and writing for
                  sequential files.
bitfile.h       - Header for bitfile class.
COPYING         - GNU General Public License v3
COPYING.LESSER  - GNU Lesser General Public License v3
Makefile        - makefile for this project (assumes gcc compiler and GNU make)
README          - this file
sample.cpp      - Program demonstrating how to use the bitfile class.

BUILDING
--------
To build these files with GNU make and gcc, simply enter "make" from the
command line.

USAGE
-----
sample.cpp demonstrates usage of each of the bitfile methods.

HISTORY
-------
08/04/04 - Initial release
06/21/05 - Corrected GetBits/PutBits error that accessed an extra byte
           when given an integral number of bytes.
12/08/05 - Added methods to get/put bits from/to integer types.
02/09/06 - Corrected bug in GetBit discovered by Peter Husemann.  A
           0xFF byte may be recognized as an EOF.
06/03/06 - Corrected destructor for writing bitfile objects.
08/26/07 - All methods that don't modify the calling object have been made
           const to increase functionality of const bit_array_c.
           Updated license to LGPL v3.
01/26/07 - Added ByteAlign and FlushOutput methods.
07/22/09 - Zeros out MS bits in int returned by GetChar when not returning
           an EOF.

TODO
----
- Consider adding extra count so that files ending in incomplete bytes
  may be appended to starting with the incomplete byte instead of the
  next whole byte.
- Test on platforms with character lengths other than 8 bits.

AUTHOR
------
Michael Dipperstein (mdipperstein@gmail.com)
